#import "../template.typ":*

= Творческий кризис Кохася 

== Системы Штейнера

 *Мудрецы и шляпы*

У нас есть $n$ мудрецов и $k$ шляп $k>=n$. Мудрецы стоят в ряд. Каждому мудрецу на голову надевают одну из $k$ шляп, выбранную случайным образом. Мудрец не видит шляпу на своей собственной голове, но видит шляпы всех впереди стоящих мудрецов (тот, кто стоит последним в ряду, видит всех, кроме себя, а тот, кто стоит первым, не видит никого).


Мудрецы не могут общаться друг с другом, жестами, поворачиваться и т.д. Однако, начиная с затылка ряда (с того, кто видит больше всех), каждого мудреца по очереди спрашивают: "Какого цвета твоя шляпа?". Мудрец должен ответить одним из $k$ возможных цветов. При этом нельзя повторять цвета. Его цель — *назвать правильный цвет*. Мудрецы могут заранее договориться об общей стратегии, чтобы максимизировать число гарантированно угаданных шляп. В этом и состоит наша задача.

Есть разные интересные простые частные решения. Для расширения кругозора #link("https://www.youtube.com/watch?v=Yzcq_io3MZg")[тык] (там с самого начало). Нас интересует нечто другое.
 
*Идея*

Что вот по-хорошему должны сделать мудрецы? 
- Первый мудрец почти всегда проиграет, он не может угадать, что у него на голове
- Первый должен передать какой-то "ключ" своим коллегам перед ним и коллеги имея ключ должны угадать свой номер. То есть по факту каждый человек видит ключ(key) знает тех, кто был до него и видит тех, кто был после него:
$ k e y "  "1"  " ..."  "  3"  " ?"  " 5"  " ..."  " 4  $
Мы хотим такой список, что зная $n-1$ число, мы можем понять $n$-ое.

*Система Штейнера*

#definition(
  title: [
    Система Штейнера $S(t, n, nu)$
  ], body:[
    
    
    КПК вообще сделал лирическое отступление про "Конструктор Ромашку". Пример странный, так что формальное объяснение:


  #def[Система Штейнера] это набор из $n$~---элементных подмножеств множества $X$ из $nu$ элементов таких, что любое $t$~---элементное подмножество множества $X$ содержалось ровно в одном из выбранных подмножеств.

  В литературе чаще используют $S(t,k,nu)$
])

По факту наша задача про  мудрецов свелась к $S(n-1,n,k)$.

Бывает $S(4,5,11)$, не бывает $S(3,4,7)$

* Решаем мудрецов $n = 4,k = 9$*

Они берут конечное поле из 8 элементов: $F_8$. Мы знаем, что конечные поля существуют в $F_(p^l)$.

Есть $RR$ и $RR^3$, мы умеем думать об $RR^3$ как о коэффициентах перед $i,j,k$. Возьмем идею.

Возьмем 1, $xi$, $xi^2$ - 3 линейно независимых векторов в $RR^3$. Пусть у нас выполнено: $ xi^3 + xi + 1 =0 $ У нас получается нечто из 8 точек(будем ставить 0 или 1 перед $1,xi,xi^2$). Почему-то они удовлетворяют аксиомам поля (можете проверить).

$f(x) = (a x + b) / (c x + d)$ - гипербола, если $a d - b c != 0$.

Будем считать, что $f: (RR union {infinity}) -> (RR union {infinity})$ - #def[проективная прямая] 

Оно представляет все точечки, кроме асимптоты. Поэтому будем считать, что $infinity -> a/c, -d/c -> infinity$. То есть у нас биективная функция.

// поправь то что в скобках
#theorem(
  body: [
    $forall underparen(a\,b\,c, "разл.") in overline(RR): forall underparen(A\,B\,C, "разл.") in overline(RR):exists! f$ - дробно-линейная, такая что:
    $ f(a) = A, f(b) = B, f(c) = C $
  ], proof: [
    Вот она:
    $ (y-A)/(y - B) : (C-A)/(C-B) =(x-a)/ (x-b) : (c-a)/(c-b)  $
    КПК:
      Единственность покажете сами 
])

А теперь склеиваем все воедино.

- Первый мудрец видит перед собой номера шляп: $b,c,d$. По вышесказанной  теореме существует функция, которое отображает $f(2)=b,f(3)=c,f(4)=d$. Так как она единственная Первый мудрец говорит $f(1)$
- Второй мудрец имея 3 числа из 4 восстанавливает дробно-линейную функцию, а так как она единственная то получает ту же самую. Он восстанавливает свой номер и называет его
- Остальные аналогично восстанавливают свой номер



*Еще решения мудрецов*

$X$ - множество, $|X| = k > 23$ 

Линия  - это подмножество $X$
1. Любые две пересек. по $<=$ 1 точке
2. $forall a,b in X:exists!$ линия $l$: $a,b in l$
3. $|l| = 4,5,6$

В угоду моей психике это будет сделано позже


== Канторова Лестница.

Определена на $[0,1]^2$. Это функция, которая строится

*Процесс построения итерациями:*

1.  *Исходное состояние:* Начинаем с горизонтального отрезка от точки (0, 0) до точки (1, 1) на плоскости. 

2.  *Шаг 1 (n=1):*
       *Разделяем отрезок:* Делим исходный отрезок на три равные части по горизонтали (координата `x`).
      Теперь график состоит из трёх равных сегментов: восходящий, горизонтальный, восходящий.

3.  *Шаг 2 (n=2):*
       *Повторяем для восходящих сегментов:* Каждый из двух наклонных сегментов, полученных на предыдущем шаге, мы обрабатываем так же, как исходный отрезок на шаге 1, но в меньшем масштабе.
       Делим их на три части. На их средних третях (например, [1/9, 2/9] и [7/9, 8/9]) функция становится горизонтальной на уровнях `y = 1/4` и `y = 3/4` соответственно.

4.  *Последующие шаги:* Этот процесс повторяется бесконечно. На каждом шаге `n` мы берем все `2^(n-1)` оставшихся наклонных сегментов, делим их на три части и делаем их средние трети горизонтальными на промежуточных уровнях между уже существующими.

*Результат:*


#align(center)[#image("../assets/creative-crisis-kantor-stairs.png", width:40%)]  